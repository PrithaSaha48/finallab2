Abstract------


abstract public class Shape {
	private String color;

	

	public Shape(String color) {
		super();
		this.color = color;
	}



	@Override
	public String toString() {
		return "Shape [color=" + color + "]";
	}
	
	abstract public double getArea();
	
		
	
	
	
	
	
	
}



-------


public class Rectangle extends Shape {

	private int length;
	private int width;
	
	public Rectangle(String color, int length, int width) {
		super(color);
		this.length = length;
		this.width = width;
	}

	@Override
	public String toString() {
		return "Rectangle [length=" + length + ", width=" + width + "]";
	}

	@Override
	public double getArea() {
		// TODO Auto-generated method stub
		return length*width;
	}
	
	
	
	

}

------


public class Triangle extends Shape {
	
	private int base;
	private int height;
	public Triangle(String color, int base, int height) {
		super(color);
		this.base = base;
		this.height = height;
	}
	
	
	public double getArea() {
		
		return 0.5*base*height;
	}
	
	

}

--------


public class Circle extends Shape {
	
	private int radius;
	

	
	
	


	public Circle(String color, int radius) {
		super(color);
		this.radius = radius;
	}







	public double getArea() {
		
		// TODO Auto-generated method stub
		return 3.1416 *radius*radius;
	}

	
	
	
	
	

}

------


public class ShapeTest {

	public static void main(String[] args) {
		Shape s= new Triangle ("Red",12,4);
		System.out.println("Area of" +s.getArea());
		
		
	
		Shape s1= new Circle ("Red",12);
		System.out.println("Area of" +s1.getArea());
		
		
		Shape s2= new Rectangle ("Red",12,5);
		System.out.println("Area of" +s2.getArea());
	}

}
